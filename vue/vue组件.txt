1.单文件组件说明
   .vue文件是一个自定义的文件类型，用html语法描述一个vue组件。每个.vue文件包含三种类的顶级语言块
    -<template>HTML</template>
    -<script>javascript</script>
    -<style>css</style>
2.创建vue实例
   每个vue应用都是他通过vue函数创建一个新的vue实例开始的，创建实例时，可以什么入一个选项对象，这些选项对象用来配置你想要的行为。
    -var vm=new Vue({data:{},props:{})
3.实例属性.组件的属性
   Vue实例暴露了一些实例属性各方法，他们在创建实例时，写在配置对象中，创建实例后可以通过添加前缀$后的属性名调用，以便与自定义的属性区分
    1.data
       实例或组件的数据对象，数据类型为对象或函数（函数返回值必须是对象）
    2.computed
       计算属性，Vue的模板中允许使用javascript简单计算，但是复杂的计算的属性，需要使用computed将逻辑提取出来，便于管理维护。
    3.props
       -props可以是数组或者对象，用于接收来处父级组件数据，如果是对象类型，可以用来配置类型检验，设置默认值等高级功能。
       -真实传入props是在父组件中调用子组件时，但是在子组件中需要显式的props选项声明它预期声明它预期的数据。
       -非Prop特性，指的是直接传入组件，组件中不声明相应的prop，这种方式定义的props,在子组件中不方便使用，但是会直接添加到子组件的根元素上
   4.methods
     methods与其他属性一样将被混入Vue实例中，可以通过vm实例访问这些方法，或者在指令表达式中使用，方法中的this自动绑定为Vue实例
   5.watch
      观察Vue实例变化的一个表达式或者计算属性，值为一个接受旧值和新值的函数，或者方法名，Vue实例会可以在实例化时期调用（用于监听某个状态变化，变化后做出相应的响应或者操作）
   6.el
      只有在new创建的实例中才会用到，提供一个在页面上已经存在的DOM元素作为Vue的挂载目标，可以是css选择器或html实例
   7.template
      一个字符串模板作为Vue实例的标识所用，模板将会替换挂载的元素。
   8.components
      注册组件（有全局和局部注册）







 

 


